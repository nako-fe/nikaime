# -*- coding: utf-8 -*-
"""todo.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jN34u1jZuTwkAORWpobgjCbNC0b4yHJx
"""

import streamlit as st

# --- アプリのタイトル ---
st.title("シンプルなToDoリストアプリ")

# --- セッションステートの初期化 ---
# アプリのリロード時に状態を保持するために使用
if "todos" not in st.session_state:
    st.session_state.todos = []

# --- ToDo の追加機能 ---
st.header("新しいToDoを追加")
new_todo = st.text_input("ToDoを入力してください")

if st.button("ToDoを追加"):
    if new_todo: # 入力が空でない場合のみ追加
        st.session_state.todos.append({"task": new_todo, "completed": False})
        st.success(f"「{new_todo}」を追加しました！")
        # 入力ボックスをクリアするために、text_inputの値をリセット
        # （これはボタンを押した後に自動で更新されるが、明示的に示唆）
        # st.text_input("ToDoを入力してください", value="") # これをするとボタン押下後に前の入力が残らない
    else:
        st.warning("ToDoを入力してください。")


# --- ToDo リストの表示 ---
st.header("あなたのToDoリスト")

if st.session_state.todos:
    # チェックボックスと削除ボタンをToDoごとに表示
    for i, todo in enumerate(st.session_state.todos):
        col1, col2, col3 = st.columns([0.7, 0.15, 0.15]) # 列の比率を調整

        with col1:
            # チェックボックスで完了/未完了を切り替える
            # key をユニークにする必要がある (index を利用)
            checked = st.checkbox(todo["task"], value=todo["completed"], key=f"checkbox_{i}")
            if checked != todo["completed"]:
                st.session_state.todos[i]["completed"] = checked
                if checked:
                    st.toast(f"「{todo['task']}」を完了しました！")
                else:
                    st.toast(f"「{todo['task']}」を未完了に戻しました！")
                st.rerun() # 状態が変更されたらアプリを再実行して表示を更新

        with col2:
            # 完了済みの場合に「完了」表示
            if todo["completed"]:
                st.markdown('<p style="color: green; font-weight: bold;">完了</p>', unsafe_allow_html=True)
            else:
                st.markdown('<p style="color: orange; font-weight: bold;">未完了</p>', unsafe_allow_html=True)

        with col3:
            # 削除ボタン
            if st.button("削除", key=f"delete_button_{i}"):
                st.session_state.todos.pop(i) # リストから削除
                st.toast(f"ToDoを削除しました！", icon="🗑️")
                st.rerun() # 削除されたらアプリを再実行して表示を更新
    st.markdown("---") # リストの下に区切り線

else:
    st.info("まだToDoがありません。新しいToDoを追加しましょう！")

# --- アプリの情報を表示（デバッグ用など） ---
# st.write("現在のセッションステート:", st.session_state.todos) # 開発中に状態を確認したい場合